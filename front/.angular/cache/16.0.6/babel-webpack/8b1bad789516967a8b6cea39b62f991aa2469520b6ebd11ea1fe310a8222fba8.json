{"ast":null,"code":"import * as i0 from \"@angular/core\";\nlet ThemeService = /*#__PURE__*/(() => {\n  class ThemeService {\n    constructor() {\n      this.key = 'eb-theme';\n      const saved = localStorage.getItem(this.key);\n      // apply both html and body classes so CSS rules using either strategy work\n      if (saved === 'dark') {\n        document.documentElement.classList.add('dark');\n        document.documentElement.classList.remove('light');\n        document.body.classList.add('dark-theme');\n      } else if (saved === 'light') {\n        document.documentElement.classList.add('light');\n        document.documentElement.classList.remove('dark');\n        document.body.classList.remove('dark-theme');\n      } else {\n        // default to light\n        document.documentElement.classList.add('light');\n        document.body.classList.remove('dark-theme');\n      }\n    }\n    toggle() {\n      const isDark = document.documentElement.classList.toggle('dark');\n      // keep html.light inverse in sync\n      if (isDark) document.documentElement.classList.remove('light');else document.documentElement.classList.add('light');\n      document.body.classList.toggle('dark-theme', isDark);\n      localStorage.setItem(this.key, isDark ? 'dark' : 'light');\n    }\n    setDark(dark) {\n      document.documentElement.classList.toggle('dark', dark);\n      document.documentElement.classList.toggle('light', !dark);\n      document.body.classList.toggle('dark-theme', dark);\n      localStorage.setItem(this.key, dark ? 'dark' : 'light');\n    }\n    isDark() {\n      return document.documentElement.classList.contains('dark') || document.body.classList.contains('dark-theme');\n    }\n    static {\n      this.ɵfac = function ThemeService_Factory(t) {\n        return new (t || ThemeService)();\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: ThemeService,\n        factory: ThemeService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return ThemeService;\n})();\nexport { ThemeService };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}